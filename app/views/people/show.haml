- content_for :javascript do
  initialize_profile_view(#{array_or_string_for_javascript(@person.badges.order("id DESC").limit(6).collect(&:name))});

- content_for :extra_javascript do
  = javascript_include_tag "http://maps.google.com/maps/api/js?sensor=true"
  
.grid_6
  = large_avatar_thumb(@person)
  - if @current_user && @current_user.is_admin?
    #edit_links
      = render :partial => "edit_links"
  - if @person.badges.size > 0 && @person.badges_visible_to?(@current_user)
    .profile_badges_header
      = "#{t('.badges')} (#{@person.badges.size})"
      &nbsp;
      = link_to t(".what_are_these"), "#", :id => "badges_description_link"
    .profile_badges
      = render :partial => "profile_badge", :collection => @person.badges.order("id DESC").limit(6), :as => :badge
      .profile_badges_link_to_all
        = link_to t(".show_all_badges"), person_badges_path(:person_id => @person.id)
  - if @person.received_testimonials.size > 0    
    .profile_feedback_header
      .profile_feedback_average_image
        %div{:class => grade_image_class(@person.feedback_average)}
          &nbsp;
      .profile_feedback_average
        .profile_feedback_average_title
          = t(".feedback_average")
        .profile_feedback_average_value
          = @person.feedback_average.to_s + "/5"
        .profile_feedback_average_description
          = "(" + grade_text(@person.feedback_average, false) + ")"
    .profile_feedback_list
      .profile_feedback_arrow
        &nbsp;
      .profile_feedback_texts
        = render :partial => "profile_feedback", :collection => @person.received_testimonials.limit(1), :as => :testimonial, :spacer_template => "profile_feedback_spacer"
      .profile_testimonials_link_to_all
        = link_to t(".show_all_testimonials") + " (#{@person.received_testimonials.size})", person_testimonials_path(:person_id => @person.id)
        
        
.grid_18
  #inactive_notification
    = render :partial => "inactive_notification"
  .grid_11.alpha
    %h1= @person.name
    #profile_info
      = t(".joined_this_community")
      = l(@community_membership.created_at.to_date) + "."
      %br/
      %br/
      - if logged_in?
        .profile_info_row
          .profile_info_row_title
            = t(".address")
          .profile_info_row_content
            = @person.location.address if @person.location.present?
        .profile_info_row    
          .profile_info_row_title
            = t(".phone_number")
          .profile_info_row_content
            = @person.phone_number 
      .profile_info_row    
        .profile_info_row_title
          = t(".about_me")
        .profile_info_row_content
          #profile_description_preview
            - text_with_line_breaks do
              = truncate(@person.description, :length => 200, :omission => "...")
            - if @person.description && @person.description.length > 200
              %br/
              = link_to t(".show_full_description"), "#", :id => "description_preview_link"
          - if @person.description && @person.description.length > 200      
            #profile_description_full
              - text_with_line_breaks do
                = @person.description
              %br/  
              = link_to t(".hide_description"), "#", :id => "description_full_link"
  .grid_7.omega
    - if current_user?(@person)
      #request_listing_link
        %a{:href => profile_person_settings_path(:person_id => @current_user.id.to_s)}
          = image_tag "/images/icons/request_icon.png"
          .request_listing_link_label
            = t(".edit_profile_info")
    - if logged_in? && @person.location && @person.location.address != ""
      #googlemap
        = render :partial => "googlemap"
        = render :partial => "profile_location", :locals => { :location => @person.location }

  .clear  
    
  #listings
    = render :partial => "profile_listings"


- if @person.badges.size > 0 && @person.badges_visible_to?(@current_user)
  = render :partial => "help_texts", :collection => ["badges_description"], :as => :field
  = render :partial => "badge_description", :collection => @person.badges.order("id DESC").limit(6), :as => :badge